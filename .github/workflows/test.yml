name: Test

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"

jobs:
  get-node-version:
    name: Get Node version
    if: github.event_name != 'pull_request' || (github.event_name == 'pull_request' && github.event.base.repo.id != github.event.head.repo.id)
    runs-on: ubuntu-latest
    outputs:
      node-version: ${{ steps.get-node-version.outputs.node-version }}
    steps:
      - uses: actions/checkout@v2
      - name: Check get-node-version version
        uses: ./.github/actions/get-node-version
        with:
          package-json: .github/actions/get-node-version/package.json
      - name: Get Node version
        id: get-node-version
        uses: ./.github/actions/get-node-version

  pre-commit:
    name: Run pre-commit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: false
      - name: Setup Python 3.8
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Get node version
        id: node-version
        run: echo "::set-output name=node-version::$(node --version)"
      - uses: snok/install-poetry@v1
        with:
          version: 1.4.1
          virtualenvs-in-project: true
      - name: Cache poetry venv
        id: cache-poetry
        uses: actions/cache@v4
        with:
          path: .venv
          key: "poetry-${{ runner.os }}-\
            ${{ steps.setup-python.outputs.python-version }}-\
            ${{ hashFiles('poetry.lock') }}"
          restore-keys: |
            poetry-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-
      - name: Install poetry dependencies
        run: poetry install
      - name: Cache pre-commit cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: "pre-commit-${{ runner.os }}-\
            ${{ steps.setup-python.outputs.python-version }}-\
            ${{ steps.node-version.outputs.node-version }}-\
            ${{ hashFiles('.pre-commit-config.yaml') }}"
      - name: Run pre-commit
        run: poetry run pre-commit run --show-diff-on-failure --color=always --all-files

#  TODO: Configure build secrets & re-enable
#  build:
#    name: Build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - name: Build Docker images
#        run: IMAGE_TAG=${GITHUB_REF##*/} docker compose -f docker-compose.build.yml build --pull
#      - name: Login to Docker Hub
#        if: github.event_name != 'pull_request'
#        env:
#          DOCKER_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
#          DOCKER_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
#        run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
#      - name: Push image to Docker Hub
#        if: github.event_name != 'pull_request'
#        run: IMAGE_TAG=${GITHUB_REF##*/} docker compose -f docker-compose.build.yml push

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: get-node-version
    env:
      VITE_SITE_URL: ${{ vars.NEXT_PUBLIC_SITE_URL }}
      VITE_API_URL: ${{ vars.NEXT_PUBLIC_API_URL }}
      VITE_AUTH_BASE_URL: ${{ vars.NEXT_PUBLIC_SITE_URL }}
      VITE_AUTH_RETURN_URL: ${{ vars.NEXT_PUBLIC_SITE_URL }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node 24
        uses: actions/setup-node@v4
        with:
          node-version: "24"
          cache: "yarn"
      - name: Set fontawesome token
        run: |
          npm config set "@fortawesome:registry" https://npm.fontawesome.com/
          npm config set "//npm.fontawesome.com/:_authToken" ${{ secrets.NPM_FA_TOKEN }}
      - name: Install Yarn dependencies
        run: yarn install --frozen-lockfile
      - name: Build @thunderstore/beta-switch
        run: yarn workspace @thunderstore/beta-switch build
      - name: Build @thunderstore/cyberstorm
        run: yarn workspace @thunderstore/cyberstorm build
      - name: Build @thunderstore/cyberstorm-forms
        run: yarn workspace @thunderstore/cyberstorm-forms build
      - name: Build and test @thunderstore/cyberstorm-remix
        run: |
          yarn workspace @thunderstore/cyberstorm-remix build
          yarn workspace @thunderstore/cyberstorm-remix test run
      # Enable once build process has been fixed.
      # - name: Build @thunderstore/cyberstorm-storybook
        # run: yarn workspace @thunderstore/cyberstorm-storybook build
      - name: Build @thunderstore/dapper
        run: yarn workspace @thunderstore/dapper build
      - name: Build @thunderstore/dapper-fake
        run: yarn workspace @thunderstore/dapper-fake build
      - name: Build and test @thunderstore/dapper-ts
        run: |
          yarn workspace @thunderstore/dapper-ts build
          yarn workspace @thunderstore/dapper-ts test
      - name: Build and test @thunderstore/graph-system
        run: |
          yarn workspace @thunderstore/graph-system build
          yarn workspace @thunderstore/graph-system test run
      - name: Build @thunderstore/react-dnd
        run: yarn workspace @thunderstore/react-dnd build
      - name: Build and test @thunderstore/thunderstore-api
        run: |
          yarn workspace @thunderstore/thunderstore-api build
          yarn workspace @thunderstore/thunderstore-api test
      - name: Build @thunderstore/ts-api-react
        run: yarn workspace @thunderstore/ts-api-react build
      - name: Build @thunderstore/ts-api-react-actions
        run: yarn workspace @thunderstore/ts-api-react-actions build
      - name: Build @thunderstore/ts-api-react-forms
        run: yarn workspace @thunderstore/ts-api-react-forms build
      - name: Build and test @thunderstore/ts-uploader
        # Add running tests once they've been fixed.
        run: |
          yarn workspace @thunderstore/ts-uploader build
      - name: Build @thunderstore/ts-uploader-react
        run: yarn workspace @thunderstore/ts-uploader-react build
      - name: Build and test @thunderstore/typed-event-emitter
        run: |
          yarn workspace @thunderstore/typed-event-emitter build
          yarn workspace @thunderstore/typed-event-emitter test
      - name: Build @thunderstore/use-promise
        run: yarn workspace @thunderstore/use-promise build

  chromatic-deployment:
    runs-on: ubuntu-latest
    needs: ["test", "pre-commit", "get-node-version"]
    strategy:
      matrix:
        projects: [
          { dir: "apps/storybook", token: "CHROMATIC_CYBERSTORM_TOKEN" },
        ]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Node ${{ needs.get-node-version.outputs.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ needs.get-node-version.outputs.node-version }}
          cache: "yarn"
      - name: Set fontawesome token
        run: |
          npm config set "@fortawesome:registry" https://npm.fontawesome.com/
          npm config set "//npm.fontawesome.com/:_authToken" ${{ secrets.NPM_FA_TOKEN }}
      - name: Install Yarn dependencies
        run: yarn install --frozen-lockfile
      - name: Publish to Chromatic
        uses: chromaui/action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          projectToken: ${{ secrets[matrix.projects.token] }}
          workingDir: ${{ matrix.projects.dir }}
          exitOnceUploaded: true
